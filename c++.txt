{
  // general user snippets :

  "main user snippets ": {
    "prefix": "iostream",
    "body": [
      "/*",
      "*",
      "*************************************************************",
      "* AUTHOR : Ashish Gururani                                  *",
      "* Language: C++14                                           *",
      "* Purpose: -                                                *",
      "* IDE used: Visual Studio Code.                             *",
      "*************************************************************",
      "*",
      "Comments will be included in practice problems if it helps ^^",
      "*/",
      "#include <bits/stdc++.h>",
      "typedef long             long ll;",
      "typedef long             double ld;",
      "#define rep(i,n,k)       for(ll i=0;i<n;i+=k)",
      "#define rrep(i,n,k)      for(ll i=n;i>=0;i-=k)",
      "#define rep1(i,n,k)      for(ll i=1;i<n;i+=k)",
      "#define vi               vector<int>",
      "#define vl               vector<ll>",
      "#define vs               vector<string>",
      "#define vvi              vector<vi>",
      "#define vvl              vector<vl>",
      "#define vvs              vector<vs>",
      "#define mem(a,b)         memset(a,b,sizeof(a))",
      "#define fast             ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)",

      "#define pb               emplace_back",
      "#define mp               make_pair",
      "#define fi               first",
      "#define se               second",
      "#define endl          \"\\n\"",

      "#define tc(t)            long long t;cin>>t;while(t--)",
      "#define all(x)           (x).begin(), (x).end()\n",

      "#define dbg(x)           cout<<#x<<\" = \"<<x<<endl",

      "#define inf                 1e6+5",
      "#define mod              ll(1e9+7)",

      "using namespace std;\n",
      "template<typename T>",
      "void print_array(const T &arr, char c = ' ')",
      "{",
      "for (auto x : arr)",
      "{",
      "cout << x << c;",
      "}",
      "cout << endl;",
      "}\n",

      "template<typename T>",
      "void input_array(vector< T> &arr)",
      "{",
      "for (ll i = 0; i < arr.size(); i++)",
      "{",
      "cin>>arr[i];",
      "}",

      "}\n",

      "vvl adj;",
      "vl vis;",
      "int main()",
      "{",

      "#ifndef ONLINE_JUDGE",
      "freopen(\"input.txt\", \"r\", stdin);",
      "freopen(\"error.txt\", \"w\", stderr);",
      "freopen(\"output.txt\", \"w\", stdout);",
      "#endif",

      "fast;",
      "ll a, b,c,d,e,f,m,n,p,q;",
      "string s,r;\n",

      "//tc(t)\n{",
      "\t ",
      "}",

      "return 0;",
      "}"
    ]
  },

  // seives prime:

  "seive": {
    "prefix": "seive",
    "body": [
      " vl seive(1e6+5,1);\n",
      "seive[1]=0,seive[0]=0;",
      "for(ll i=2; i*i<=inf;i++)",
      "{",
      " if(seive[i]==1)",

      "for(ll j=i*i;j<inf; j+=i)",
      "{",
      " seive[j]=0;",
      "}",
      "}"
    ]
  },
  // power
  "power": {
    "prefix": "power",
    "body": [
      "ll power(ll n,ll p){",
      "ll res=1;",
      "while (p)",
      "{",
      "if(p%2){",
      " res*=n;",
      "p--; ",
      "res%=mod;",
      " }else {",
      " n*=n;",
      "p/=2;",
      "n%=mod;",
      "}",
      "}",
      "return res;",

      "}"
    ]
  },

  // gcd && lcm functions:

  "gcd && lcm": {
    "prefix": "gcd && lcm",
    "body": [
      "ll gcd(ll a,ll b)       {if(b==0)return a; return gcd(b, a % b);}",
      "ll lcm(ll a,ll b)       {return (a*b)/gcd(a,b);}\n"
    ]
  },

  //google ans formate:

  "google": {
    "prefix": "google ans formate",
    "body": ["cout<<\"Case #\"<<$1:"]
  },
  //google ans formate:

  "testcase": {
    "prefix": "testcase",
    "body": [
      "int testcase = 0;",
      "cin>> testcase;",
      "for (int t = 1; t <=testcase; t++)",
      " {",

      " }"
    ]
  },

  "boost li": {
    "prefix": "boost",
    "body": [
      "#include <boost/multiprecision/cpp_int.hpp>",
      "using boost::multiprecision::cpp_int;"
    ]
  },
  "spf": {
    "prefix": "seive prime factorization",
    "body": [
      "vl spf(inf);",

      "void sieve()",
      "{",
      "spf[1] = 1;",
      "for (int i=2; i<inf; i++)",

      "spf[i] = i;",

      "for (int i=4; i<inf; i+=2)",
      "spf[i] = 2;",

      "for (int i=3; i*i<inf; i++)",
      "{",

      "if (spf[i] == i)",
      "{",

      "for (int j=i*i; j<inf; j+=i)",

      "if (spf[j]==j)",
      "spf[j] = i;",
      "}",
      "}",
      "}"
    ]
  }
}
